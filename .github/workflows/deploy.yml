name: Build and Deploy to Kubernetes

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adoptopenjdk'
        
      - name: Build with Maven
        run: mvn clean package -DskipTests
        
      - name: Build Docker Image
        run: |
          docker build -t git-ops-poc .
        
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        
      - name: Push Docker Image
        run: |
          docker tag git-ops-poc:latest apesconsole/git-ops-poc:latest
          docker push apesconsole/git-ops-poc:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Kubernetes kubeconfig
        uses: azure/setup-kubectl@v1
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
       
      - name: Create Kubernetes Secret for MY_SECRET
        run: |
          kubectl create secret generic my-secret \
            --from-literal=MY_SECRET=${{ secrets.MY_SECRET }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/v2.8.0/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Connect ArgoCD to Kubernetes
        run: |
          kubectl config use-context docker-desktop
          argocd login argocd-server --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }} --insecure

      - name: Deploy with ArgoCD
        run: |
          argocd app sync git-ops-poc
